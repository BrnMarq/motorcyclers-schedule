{"ast":null,"code":"var _jsxFileName = \"/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/Schedule/Schedule.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport apiUrl from '../Admin/Providers/apiUrl';\nimport { useGetAuthToken } from '../Admin/Providers/TokenAuthProvider';\nimport alertify from 'alertifyjs';\nimport 'alertifyjs/build/css/alertify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Schedule = () => {\n  _s();\n\n  const userToken = useGetAuthToken();\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(TableItemV2, {\n          pk: 1,\n          userToken: userToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Schedule, \"XPFkJaSyLY9TLSECt067ld5ldA0=\", false, function () {\n  return [useGetAuthToken];\n});\n\n_c = Schedule;\n\nconst TableItemV2 = props => {\n  _s2();\n\n  const [motorcyclers, setMotorcyclers] = useState({});\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    axios.get(apiUrl + `/motorcyclers/${props.pk}/get/`).then(response => {\n      const data = response.data;\n      setMotorcyclers({\n        id: data.id,\n        max_amount: data.max_amount,\n        actual_amount: data.actual_amount,\n        users: data.users\n      });\n      console.log(Boolean(props.userToken));\n\n      if (props.userToken) {\n        const tokens = JSON.parse(motorcyclers.users);\n        console.log(tokens);\n\n        if (tokens && tokens.includes(props.userToken)) {\n          setSelected(true);\n        }\n      }\n    });\n  }, []);\n\n  const addUser = () => {\n    const tokens = JSON.parse(motorcyclers.users);\n    const userToken = props.userToken;\n    return tokens ? [...tokens, userToken] : [userToken];\n  };\n\n  const removeUser = () => {\n    const tokens = JSON.parse(motorcyclers.users);\n    const userToken = props.userToken;\n    const users = tokens.filter(user => user !== userToken);\n    return users;\n  };\n\n  const updateMotorcyclersAmount = amount => {\n    const users = selected ? removeUser() : addUser();\n    const encodedUsers = JSON.stringify(users);\n    axios.patch(apiUrl + `/motorcyclers/1/`, {\n      actual_amount: amount,\n      users: encodedUsers\n    });\n    return encodedUsers;\n  };\n\n  const onClick = () => {\n    if (!props.userToken) {\n      alertify.error('Please login before using the schedule', 2);\n      return;\n    } // Check if there's any motorcycler left to select\n\n\n    if (!selected && motorcyclers.actual_amount < 1) {\n      alertify.error('No motorcyclers left');\n      return;\n    }\n\n    const newMotorcyclers = { ...motorcyclers\n    };\n\n    if (selected) {\n      newMotorcyclers.actual_amount++;\n    } else {\n      newMotorcyclers.actual_amount--;\n    }\n\n    const users = updateMotorcyclersAmount(newMotorcyclers.actual_amount);\n    newMotorcyclers.users = users;\n    setMotorcyclers(newMotorcyclers);\n    setSelected(!selected);\n  };\n\n  const decideBackgroundColor = () => {\n    if (selected) {\n      return colors.selected;\n    } else if (motorcyclers.actual_amount <= 0) {\n      return colors.outOfMotorcyclers;\n    } else {\n      return colors.notSelected;\n    }\n  };\n\n  const styles = {\n    width: '100px',\n    height: '100px',\n    textAlign: 'center',\n    backgroundColor: decideBackgroundColor()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    onClick: () => onClick(),\n    children: motorcyclers.actual_amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TableItemV2, \"koQBe0tIFHHw12jZgHePWeSXNmo=\");\n\n_c2 = TableItemV2;\n\nclass TableItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      motorcyclers: {},\n      selected: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(apiUrl + `/motorcyclers/${this.props.pk}/get/`).then(response => {\n      const motorcyclers = response.data;\n      this.setState({\n        motorcyclers: {\n          id: motorcyclers.id,\n          max_amount: motorcyclers.max_amount,\n          actual_amount: motorcyclers.actual_amount,\n          users: motorcyclers.users\n        }\n      });\n\n      if (this.props.userToken) {\n        const tokens = JSON.parse(this.state.motorcyclers.users);\n\n        if (tokens && tokens.includes(this.props.userToken)) {\n          this.setState({\n            selected: true\n          });\n        }\n      }\n    });\n  }\n\n  addUser() {\n    const tokens = JSON.parse(this.state.motorcyclers.users);\n    const userToken = this.props.userToken;\n    return tokens ? [...tokens, userToken] : [userToken];\n  }\n\n  removeUser() {\n    const tokens = JSON.parse(this.state.motorcyclers.users);\n    const userToken = this.props.userToken;\n    const users = tokens.filter(user => user !== userToken);\n    return users;\n  }\n\n  updateMotorcyclersAmount(amount) {\n    const users = this.state.selected ? this.removeUser() : this.addUser();\n    const encodedUsers = JSON.stringify(users);\n    axios.patch(apiUrl + `/motorcyclers/1/`, {\n      actual_amount: amount,\n      users: encodedUsers\n    });\n    return encodedUsers;\n  }\n\n  onClick() {\n    if (!this.props.userToken) {\n      alertify.error('Please login before using the schedule', 2);\n      return;\n    } // Check if there's any motorcycler left to select\n\n\n    if (!this.state.selected && this.state.motorcyclers.actual_amount < 1) {\n      alertify.error('No motorcyclers left');\n      return;\n    }\n\n    const motorcyclers = { ...this.state.motorcyclers\n    };\n\n    if (this.state.selected) {\n      motorcyclers.actual_amount++;\n    } else {\n      motorcyclers.actual_amount--;\n    }\n\n    const users = this.updateMotorcyclersAmount(motorcyclers.actual_amount);\n    motorcyclers.users = users;\n    this.setState({\n      motorcyclers: motorcyclers,\n      selected: !this.state.selected\n    });\n  }\n\n  render() {\n    const decideBackgroundColor = () => {\n      if (this.state.selected) {\n        return colors.selected;\n      } else if (this.state.motorcyclers.actual_amount <= 0) {\n        return colors.outOfMotorcyclers;\n      } else {\n        return colors.notSelected;\n      }\n    };\n\n    const styles = {\n      width: '100px',\n      height: '100px',\n      textAlign: 'center',\n      backgroundColor: decideBackgroundColor()\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      onClick: () => this.onClick(),\n      children: this.state.motorcyclers.actual_amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst colors = {\n  selected: '#00ff00',\n  notSelected: 'blue',\n  outOfMotorcyclers: 'red'\n};\nexport default Schedule;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Schedule\");\n$RefreshReg$(_c2, \"TableItemV2\");","map":{"version":3,"sources":["/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/Schedule/Schedule.js"],"names":["React","useEffect","useState","axios","apiUrl","useGetAuthToken","alertify","Schedule","userToken","margin","TableItemV2","props","motorcyclers","setMotorcyclers","selected","setSelected","get","pk","then","response","data","id","max_amount","actual_amount","users","console","log","Boolean","tokens","JSON","parse","includes","addUser","removeUser","filter","user","updateMotorcyclersAmount","amount","encodedUsers","stringify","patch","onClick","error","newMotorcyclers","decideBackgroundColor","colors","outOfMotorcyclers","notSelected","styles","width","height","textAlign","backgroundColor","TableItem","Component","state","componentDidMount","setState","render"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport apiUrl from '../Admin/Providers/apiUrl'\nimport {useGetAuthToken} from '../Admin/Providers/TokenAuthProvider'\nimport alertify from 'alertifyjs'\nimport 'alertifyjs/build/css/alertify.css';\n\nconst Schedule = () => {\n    const userToken = useGetAuthToken()\n    return (\n        <table style={{margin : 'auto'}}>\n            <tr>\n                <td>\n                    <TableItemV2 pk={1} userToken={userToken}/>\n                </td>\n            </tr>\n        </table>\n    )\n}\n\nconst TableItemV2 = props => {\n    const [motorcyclers, setMotorcyclers] = useState({})\n    const [selected, setSelected] = useState(false)\n\n    useEffect(() => {\n        axios.get(apiUrl + `/motorcyclers/${props.pk}/get/`)\n        .then(response => {\n            const data = response.data\n            setMotorcyclers({\n                id : data.id,\n                max_amount : data.max_amount,\n                actual_amount : data.actual_amount,\n                users : data.users,\n            })\n            console.log(Boolean(props.userToken))\n            if (props.userToken) {\n                const tokens = JSON.parse(motorcyclers.users)\n                console.log(tokens)\n                if (tokens && tokens.includes(props.userToken)) {\n                    setSelected(true)\n                }\n            }\n        })\n    }, [])\n\n    const addUser = () => {\n        const tokens = JSON.parse(motorcyclers.users)\n        const userToken = props.userToken\n        return tokens ? [...tokens, userToken] : [userToken]\n    }\n\n    const removeUser = () => {\n        const tokens = JSON.parse(motorcyclers.users)\n        const userToken = props.userToken\n        const users = tokens.filter((user) => user !== userToken)\n        return users\n    }\n\n    const updateMotorcyclersAmount = amount => {\n        const users = selected ? removeUser() : addUser()\n        const encodedUsers = JSON.stringify(users)\n        axios.patch(apiUrl + `/motorcyclers/1/`, {\n            actual_amount : amount,\n            users : encodedUsers\n        })\n        return encodedUsers\n    }\n\n    const onClick = () => {\n        if (!props.userToken) {\n            alertify.error('Please login before using the schedule', 2)\n            return\n        }\n        // Check if there's any motorcycler left to select\n        if (!selected && motorcyclers.actual_amount < 1) {\n            alertify.error('No motorcyclers left')\n            return\n        }\n\n        const newMotorcyclers = {...motorcyclers}\n        if (selected) {\n            newMotorcyclers.actual_amount++\n        }\n        else {\n            newMotorcyclers.actual_amount--\n        }\n        const users = updateMotorcyclersAmount(newMotorcyclers.actual_amount)\n        newMotorcyclers.users = users\n        setMotorcyclers(newMotorcyclers)\n        setSelected(!selected)\n    }\n\n    const decideBackgroundColor = () => {\n        if (selected) {\n            return colors.selected\n        } \n        else if (motorcyclers.actual_amount <= 0) {\n            return colors.outOfMotorcyclers\n        } \n        else {\n            return colors.notSelected\n        }\n    }\n\n    const styles = {\n        width : '100px',\n        height : '100px',\n        textAlign : 'center',\n        backgroundColor : decideBackgroundColor()\n    }\n\n    return (\n        <div style={styles} onClick={() => onClick()}>\n            {motorcyclers.actual_amount}\n        </div>\n    )\n} \n\nclass TableItem extends React.Component {\n    state = {\n        motorcyclers : {},\n        selected : false\n    }\n\n    componentDidMount() {\n        axios.get(apiUrl + `/motorcyclers/${this.props.pk}/get/`)\n        .then(response => {\n            const motorcyclers = response.data\n            this.setState({\n                motorcyclers : {\n                    id : motorcyclers.id,\n                    max_amount : motorcyclers.max_amount,\n                    actual_amount : motorcyclers.actual_amount,\n                    users : motorcyclers.users,\n                }\n            })\n            if (this.props.userToken) {\n                const tokens = JSON.parse(this.state.motorcyclers.users)\n                if (tokens && tokens.includes(this.props.userToken)) {\n                    this.setState({\n                        selected : true\n                    })\n                }\n            }\n        })\n    }\n\n    addUser() {\n        const tokens = JSON.parse(this.state.motorcyclers.users)\n        const userToken = this.props.userToken\n        return tokens ? [...tokens, userToken] : [userToken]\n    }\n\n    removeUser() {\n        const tokens = JSON.parse(this.state.motorcyclers.users)\n        const userToken = this.props.userToken\n        const users = tokens.filter((user) => user !== userToken)\n        return users\n    }\n\n    updateMotorcyclersAmount(amount) {\n        const users = this.state.selected ? this.removeUser() : this.addUser()\n        const encodedUsers = JSON.stringify(users)\n        axios.patch(apiUrl + `/motorcyclers/1/`, {\n            actual_amount : amount,\n            users : encodedUsers\n        })\n        return encodedUsers\n    }\n\n    onClick() {\n        if (!this.props.userToken) {\n            alertify.error('Please login before using the schedule', 2)\n            return\n        }\n        // Check if there's any motorcycler left to select\n        if (!this.state.selected && this.state.motorcyclers.actual_amount < 1) {\n            alertify.error('No motorcyclers left')\n            return\n        }\n\n        const motorcyclers = {...this.state.motorcyclers}\n        if (this.state.selected) {\n            motorcyclers.actual_amount++\n        }\n        else {\n            motorcyclers.actual_amount--\n        }\n        const users = this.updateMotorcyclersAmount(motorcyclers.actual_amount)\n        motorcyclers.users = users\n        this.setState({\n            motorcyclers : motorcyclers,\n            selected : !this.state.selected,\n        })\n    }\n\n    render() {\n        const decideBackgroundColor = () => {\n            if (this.state.selected) {\n                return colors.selected\n            } \n            else if (this.state.motorcyclers.actual_amount <= 0) {\n                return colors.outOfMotorcyclers\n            } \n            else {\n                return colors.notSelected\n            }\n        }\n        const styles = {\n            width : '100px',\n            height : '100px',\n            textAlign : 'center',\n            backgroundColor : decideBackgroundColor()\n        }\n        return (\n            <div style={styles} onClick={() => this.onClick()}>\n                {this.state.motorcyclers.actual_amount}\n            </div>\n        )\n    }\n}\n\nconst colors = {\n    selected : '#00ff00',\n    notSelected : 'blue',\n    outOfMotorcyclers : 'red',\n}\n\nexport default Schedule"]},"metadata":{},"sourceType":"module"}