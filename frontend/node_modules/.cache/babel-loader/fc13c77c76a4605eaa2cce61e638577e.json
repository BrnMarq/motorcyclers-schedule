{"ast":null,"code":"/* import tokenAuthProvider from 'ra-data-django-rest-framework'\nimport apiUrl from './apiUrl'\n\nconst authProvider = tokenAuthProvider({obtainAuthTokenUrl : apiUrl + '/api-token-auth/'})\nconsole.log(authProvider)\n\n\nexport const modifiedAuthProvider = {\n    ...authProvider,\n    login : async ({ username, password }) => {\n        const request = new Request(apiUrl + '/api-token-auth/', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        const response = await fetch(request);\n        if (response.ok) {\n            localStorage.setItem('token', (await response.json()).token);\n            localStorage.setItem('is_staff', (await response.json()).is_staff);\n            return;\n        }\n        if (response.headers.get('content-type') !== 'application/json') {\n            throw new Error(response.statusText);\n        }\n        const json = await response.json();\n        const error = json.non_field_errors;\n        throw new Error(error || response.statusText);\n    },\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('is_staff');\n        return Promise.resolve();\n    },\n    getPermissions: () => {\n        return localStorage.getItem('is_staff') ? Promise.resolve() : Promise.reject()\n    },\n} */\nimport tokenAuthProvider from 'ra-data-django-rest-framework';\nconst apiUrl = 'http://127.0.0.1:8000';\nconst authProvider = tokenAuthProvider({\n  obtainAuthTokenUrl: '/api-token-auth/'\n});\nexport default authProvider;","map":{"version":3,"sources":["/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/Admin/Providers/TokenAuthProvider.js"],"names":["tokenAuthProvider","apiUrl","authProvider","obtainAuthTokenUrl"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,iBAAP,MAA8B,+BAA9B;AAEA,MAAMC,MAAM,GAAG,uBAAf;AAEA,MAAMC,YAAY,GAAGF,iBAAiB,CAAC;AAACG,EAAAA,kBAAkB,EAAG;AAAtB,CAAD,CAAtC;AAEA,eAAeD,YAAf","sourcesContent":["/* import tokenAuthProvider from 'ra-data-django-rest-framework'\nimport apiUrl from './apiUrl'\n\nconst authProvider = tokenAuthProvider({obtainAuthTokenUrl : apiUrl + '/api-token-auth/'})\nconsole.log(authProvider)\n\n\nexport const modifiedAuthProvider = {\n    ...authProvider,\n    login : async ({ username, password }) => {\n        const request = new Request(apiUrl + '/api-token-auth/', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        const response = await fetch(request);\n        if (response.ok) {\n            localStorage.setItem('token', (await response.json()).token);\n            localStorage.setItem('is_staff', (await response.json()).is_staff);\n            return;\n        }\n        if (response.headers.get('content-type') !== 'application/json') {\n            throw new Error(response.statusText);\n        }\n        const json = await response.json();\n        const error = json.non_field_errors;\n        throw new Error(error || response.statusText);\n    },\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('is_staff');\n        return Promise.resolve();\n    },\n    getPermissions: () => {\n        return localStorage.getItem('is_staff') ? Promise.resolve() : Promise.reject()\n    },\n} */\nimport tokenAuthProvider from 'ra-data-django-rest-framework'\n\nconst apiUrl = 'http://127.0.0.1:8000'\n\nconst authProvider = tokenAuthProvider({obtainAuthTokenUrl : '/api-token-auth/'})\n\nexport default authProvider"]},"metadata":{},"sourceType":"module"}