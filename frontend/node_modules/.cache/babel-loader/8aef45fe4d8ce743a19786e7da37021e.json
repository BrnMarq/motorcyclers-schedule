{"ast":null,"code":"var _jsxFileName = \"/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/Schedule/Schedule.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport apiUrl from '../Admin/Providers/apiUrl';\nimport { useGetAuthToken } from '../Admin/Providers/TokenAuthProvider';\nimport alertify from 'alertifyjs';\nimport 'alertifyjs/build/css/alertify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Schedule = () => {\n  _s();\n\n  const userToken = useGetAuthToken();\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"8:30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(TableItem, {\n          pk: 1,\n          userToken: userToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Schedule, \"XPFkJaSyLY9TLSECt067ld5ldA0=\", false, function () {\n  return [useGetAuthToken];\n});\n\n_c = Schedule;\n\nconst TableItem = props => {\n  _s2();\n\n  const [motorcyclers, setMotorcyclers] = useState({});\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    axios.get(apiUrl + `/motorcyclers/${props.pk}/get/`).then(response => {\n      const data = response.data;\n      setMotorcyclers({\n        id: data.id,\n        max_amount: data.max_amount,\n        actual_amount: data.actual_amount,\n        users: data.users\n      });\n\n      if (props.userToken) {\n        const tokens = JSON.parse(data.users);\n        console.log(tokens);\n\n        if (tokens && tokens.includes(props.userToken)) {\n          setSelected(true);\n        }\n      }\n    });\n  }, []);\n\n  const addUser = () => {\n    const tokens = JSON.parse(motorcyclers.users);\n    const userToken = props.userToken;\n    return tokens ? [...tokens, userToken] : [userToken];\n  };\n\n  const removeUser = () => {\n    const tokens = JSON.parse(motorcyclers.users);\n    const userToken = props.userToken;\n    const users = tokens.filter(user => user !== userToken);\n    return users;\n  };\n\n  const updateMotorcyclersAmount = amount => {\n    const users = selected ? removeUser() : addUser();\n    const encodedUsers = JSON.stringify(users);\n    axios.patch(apiUrl + `/motorcyclers/1/`, {\n      actual_amount: amount,\n      users: encodedUsers\n    });\n    return encodedUsers;\n  };\n\n  const onClick = () => {\n    if (!props.userToken) {\n      alertify.error('Please login before using the schedule', 2);\n      return;\n    } // Check if there's any motorcycler left to select\n\n\n    if (!selected && motorcyclers.actual_amount < 1) {\n      alertify.error('No motorcyclers left');\n      return;\n    }\n\n    const newMotorcyclers = { ...motorcyclers\n    };\n\n    if (selected) {\n      newMotorcyclers.actual_amount++;\n    } else {\n      newMotorcyclers.actual_amount--;\n    }\n\n    const users = updateMotorcyclersAmount(newMotorcyclers.actual_amount);\n    newMotorcyclers.users = users;\n    setMotorcyclers(newMotorcyclers);\n    setSelected(!selected);\n  };\n\n  const decideBackgroundColor = () => {\n    if (selected) {\n      return colors.selected;\n    } else if (motorcyclers.actual_amount <= 0) {\n      return colors.outOfMotorcyclers;\n    } else {\n      return colors.notSelected;\n    }\n  };\n\n  const styles = {\n    width: '100px',\n    height: '100px',\n    textAlign: 'center',\n    backgroundColor: decideBackgroundColor()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    onClick: () => onClick(),\n    children: motorcyclers.actual_amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TableItem, \"koQBe0tIFHHw12jZgHePWeSXNmo=\");\n\n_c2 = TableItem;\nconst colors = {\n  selected: '#00ff00',\n  notSelected: 'blue',\n  outOfMotorcyclers: 'red'\n};\nexport default Schedule;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Schedule\");\n$RefreshReg$(_c2, \"TableItem\");","map":{"version":3,"sources":["/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/Schedule/Schedule.js"],"names":["React","useEffect","useState","axios","apiUrl","useGetAuthToken","alertify","Schedule","userToken","margin","TableItem","props","motorcyclers","setMotorcyclers","selected","setSelected","get","pk","then","response","data","id","max_amount","actual_amount","users","tokens","JSON","parse","console","log","includes","addUser","removeUser","filter","user","updateMotorcyclersAmount","amount","encodedUsers","stringify","patch","onClick","error","newMotorcyclers","decideBackgroundColor","colors","outOfMotorcyclers","notSelected","styles","width","height","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport apiUrl from '../Admin/Providers/apiUrl'\nimport {useGetAuthToken} from '../Admin/Providers/TokenAuthProvider'\nimport alertify from 'alertifyjs'\nimport 'alertifyjs/build/css/alertify.css';\n\nconst Schedule = () => {\n    const userToken = useGetAuthToken()\n    return (\n        <table style={{margin : 'auto'}}>\n            <tr>\n                <td>\n                    8:30\n                </td>\n                <td>\n                    <TableItem pk={1} userToken={userToken}/>\n                </td>\n            </tr>\n        </table>\n    )\n}\n\nconst TableItem = props => {\n    const [motorcyclers, setMotorcyclers] = useState({})\n    const [selected, setSelected] = useState(false)\n\n    useEffect(() => {\n        axios.get(apiUrl + `/motorcyclers/${props.pk}/get/`)\n        .then(response => {\n            const data = response.data\n            setMotorcyclers({\n                id : data.id,\n                max_amount : data.max_amount,\n                actual_amount : data.actual_amount,\n                users : data.users,\n            })\n            if (props.userToken) {\n                const tokens = JSON.parse(data.users)\n                console.log(tokens)\n                if (tokens && tokens.includes(props.userToken)) {\n                    setSelected(true)\n                }\n            }\n        })\n    }, [])\n\n    const addUser = () => {\n        const tokens = JSON.parse(motorcyclers.users)\n        const userToken = props.userToken\n        return tokens ? [...tokens, userToken] : [userToken]\n    }\n\n    const removeUser = () => {\n        const tokens = JSON.parse(motorcyclers.users)\n        const userToken = props.userToken\n        const users = tokens.filter((user) => user !== userToken)\n        return users\n    }\n\n    const updateMotorcyclersAmount = amount => {\n        const users = selected ? removeUser() : addUser()\n        const encodedUsers = JSON.stringify(users)\n        axios.patch(apiUrl + `/motorcyclers/1/`, {\n            actual_amount : amount,\n            users : encodedUsers\n        })\n        return encodedUsers\n    }\n\n    const onClick = () => {\n        if (!props.userToken) {\n            alertify.error('Please login before using the schedule', 2)\n            return\n        }\n        // Check if there's any motorcycler left to select\n        if (!selected && motorcyclers.actual_amount < 1) {\n            alertify.error('No motorcyclers left')\n            return\n        }\n\n        const newMotorcyclers = {...motorcyclers}\n        if (selected) {\n            newMotorcyclers.actual_amount++\n        }\n        else {\n            newMotorcyclers.actual_amount--\n        }\n        const users = updateMotorcyclersAmount(newMotorcyclers.actual_amount)\n        newMotorcyclers.users = users\n        setMotorcyclers(newMotorcyclers)\n        setSelected(!selected)\n    }\n\n    const decideBackgroundColor = () => {\n        if (selected) {\n            return colors.selected\n        } \n        else if (motorcyclers.actual_amount <= 0) {\n            return colors.outOfMotorcyclers\n        } \n        else {\n            return colors.notSelected\n        }\n    }\n\n    const styles = {\n        width : '100px',\n        height : '100px',\n        textAlign : 'center',\n        backgroundColor : decideBackgroundColor()\n    }\n\n    return (\n        <div style={styles} onClick={() => onClick()}>\n            {motorcyclers.actual_amount}\n        </div>\n    )\n} \n\nconst colors = {\n    selected : '#00ff00',\n    notSelected : 'blue',\n    outOfMotorcyclers : 'red',\n}\n\nexport default Schedule"]},"metadata":{},"sourceType":"module"}