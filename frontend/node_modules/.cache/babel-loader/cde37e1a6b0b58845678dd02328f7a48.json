{"ast":null,"code":"var _jsxFileName = \"/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, Button, Grid, IconButton, Box, SwipeableDrawer } from '@material-ui/core';\nimport './NavBar.css';\nimport { isAuthenticated, modifiedAuthProvider as authProvider } from '../Admin/Providers/TokenAuthProvider';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = props => {\n  _s();\n\n  const [openBar, setOpenBar] = useState(false);\n\n  const handleBarToggle = () => {\n    setOpenBar(!openBar);\n  };\n\n  const navItems = [{\n    title: 'Schedule',\n    to: '/schedule'\n  }];\n  const logged = isAuthenticated();\n\n  const onClick = () => {\n    authProvider.logout();\n    window.location.reload();\n  };\n\n  const sideBarItems = navItems.map(navItem => /*#__PURE__*/_jsxDEV(Box, {\n    borderTop: 0.5,\n    borderColor: \"blue\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: navItem.to,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"p\",\n            children: navItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: isWidthUp('sm', props.width) ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"text-white\",\n              to: \"/\",\n              children: \"Motorcyclers Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          alignItems: \"center\",\n          justify: \"flex-end\",\n          xs: 4,\n          children: [navItems.map(navItem => /*#__PURE__*/_jsxDEV(Link, {\n            to: navItem.to,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"p\",\n                className: \"text-white\",\n                children: navItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)), logged ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => onClick(),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"p\",\n              className: \"text-white\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"p\",\n                className: \"text-white\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleBarToggle,\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          container: true,\n          alignItems: \"center\",\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            component: \"h1\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"text-white\",\n              to: \"/\",\n              children: \"Motorcyclers Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n          open: openBar,\n          onOpen: handleBarToggle,\n          onClose: handleBarToggle,\n          navItems: sideBarItems,\n          logged: logged,\n          onLogout: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"99v9WTj7uKpg2v1C4aRWcJyDwDY=\");\n\n_c = NavBar;\n\nconst SideBar = props => /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n  open: props.open,\n  onOpen: props.onOpen,\n  onClose: props.onClose,\n  children: /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: \"6\",\n      justify: \"flex-start\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: props.onClose,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          style: {\n            color: 'blue'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), props.navItems, /*#__PURE__*/_jsxDEV(Box, {\n      border: 0.5,\n      borderRight: 0,\n      borderLeft: 0,\n      borderColor: \"blue\",\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        children: props.logged ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: props.onLogout,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"p\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"p\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 123,\n  columnNumber: 5\n}, this);\n\n_c2 = SideBar;\nexport default withWidth()(NavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"SideBar\");","map":{"version":3,"sources":["/home/brnmarq/Documentos/BrnCode/Proyectos/MotorcylerS/frontend/src/components/NavBar/NavBar.js"],"names":["React","useState","Link","AppBar","Toolbar","Typography","Button","Grid","IconButton","Box","SwipeableDrawer","isAuthenticated","modifiedAuthProvider","authProvider","withWidth","isWidthUp","MenuIcon","ArrowBackIcon","NavBar","props","openBar","setOpenBar","handleBarToggle","navItems","title","to","logged","onClick","logout","window","location","reload","sideBarItems","map","navItem","width","color","SideBar","open","onOpen","onClose","onLogout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    Button,\n    Grid,\n    IconButton,\n    Box,\n    SwipeableDrawer,\n} from '@material-ui/core'\nimport './NavBar.css'\nimport { \n    isAuthenticated,\n    modifiedAuthProvider as authProvider\n} from '../Admin/Providers/TokenAuthProvider'\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst NavBar = props => {\n    const [openBar, setOpenBar] = useState(false)\n\n    const handleBarToggle = () => {\n        setOpenBar(!openBar)\n    }\n\n    const navItems = [\n        {\n            title : 'Schedule',\n            to : '/schedule'\n        },\n    ]\n    const logged = isAuthenticated()\n    const onClick = () => {\n        authProvider.logout()\n        window.location.reload()\n    }\n\n    const sideBarItems = navItems.map(navItem => (\n        <Box \n            borderTop={0.5}\n            borderColor=\"blue\" \n            width=\"100%\"\n        >\n            <Grid item container justify=\"center\" alignItems=\"center\">\n                <Link to={navItem.to}>\n                    <Button>\n                        <Typography variant=\"p\">\n                            {navItem.title}\n                        </Typography>\n                    </Button>\n                </Link>\n            </Grid>\n        </Box>\n    ))\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                {isWidthUp('sm', props.width) ? (\n                    <Grid container>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h4\" component=\"h1\">\n                                <Link className=\"text-white\" to=\"/\">Motorcyclers Schedule</Link>\n                            </Typography>\n                        </Grid>\n                        <Grid item container alignItems=\"center\" justify=\"flex-end\" xs={4}>\n                            {navItems.map(navItem => (\n                                <Link to={navItem.to}>\n                                    <Button>\n                                        <Typography variant=\"p\" className=\"text-white\">\n                                            {navItem.title}\n                                        </Typography>\n                                    </Button>\n                                </Link>\n                            ))}\n                            {logged ? (\n                                <Button onClick={() => onClick()}>\n                                    <Typography variant=\"p\" className=\"text-white\">\n                                        Logout\n                                    </Typography>\n                                </Button>\n                            ) : (\n                                <Link to='/login'>\n                                    <Button>\n                                        <Typography variant=\"p\" className=\"text-white\">\n                                            Login\n                                        </Typography>\n                                    </Button>\n                                </Link>\n                            )}\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container>\n                        <Grid item xs={2}>\n                            <IconButton onClick={handleBarToggle}>\n                                <MenuIcon style={{color:'white'}}/>\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={10} container alignItems='center' justify=\"flex-end\">\n                            <Typography variant=\"subtitle2\" component=\"h1\">\n                                <Link className=\"text-white\" to=\"/\">Motorcyclers Schedule</Link>\n                            </Typography>\n                        </Grid>\n                        <SideBar \n                            open={openBar} \n                            onOpen={handleBarToggle} \n                            onClose={handleBarToggle} \n                            navItems={sideBarItems}\n                            logged={logged}\n                            onLogout={onClick}\n                        />\n                    </Grid>\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nconst SideBar = props => (\n    <SwipeableDrawer open={props.open} onOpen={props.onOpen} onClose={props.onClose}>\n        <Grid container >\n            <Grid item container xs=\"6\" justify=\"flex-start\">\n                <IconButton onClick={props.onClose}>\n                    <ArrowBackIcon style={{color : 'blue'}}/>\n                </IconButton>\n            </Grid>\n            {props.navItems}\n            <Box \n                border={0.5} \n                borderRight={0} \n                borderLeft={0} \n                borderColor=\"blue\" \n                width=\"100%\"\n            >\n                <Grid item container justify=\"center\" alignItems=\"center\">\n                    {props.logged ? (\n                        <Button onClick={props.onLogout}>\n                            <Typography variant=\"p\">\n                                Logout\n                            </Typography>\n                        </Button>\n                    ) : (\n                        <Link to='/login'>\n                            <Button>\n                                <Typography variant=\"p\">\n                                    Login\n                                </Typography>\n                            </Button>\n                        </Link>\n                    )}\n                </Grid>\n            </Box>\n        </Grid>\n    </SwipeableDrawer>\n)\nexport default withWidth()(NavBar)"]},"metadata":{},"sourceType":"module"}